name: Basic CI Pipeline
run-name: ${{ github.actor }} is trying to master Exercise 3
on: [push]
jobs:
  ci-pipeline:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: ci step
        uses: actions/setup-node@v4
        with:
            node-version: 20
            
      - name: another
        run: npm ci
      - run: npm run prettier
      - run: npm run typecheck
      - run: npm run test
      - run: npm run build

      - name: upload artifact
        uses: actions/upload-pages-artifact@v3 
        with: 
            path: 'dist/'

      - run: echo "🍏 This job's status is ${{ job.status }}."

  cd-pipeline:
    runs-on: ubuntu-latest
    needs: [ci-pipeline]
    permissions: 
        pages: write
        id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      pages-url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deployment
        id: deployment
        uses: actions/deploy-pages@v4
  
      - run: echo "🍏 This job's status is ${{ job.status }}."

  smoke-test:
      needs: cd-pipeline
      runs-on: ubuntu-latest
      timeout-minutes: 3
      strategy: 
        matrix:
          browser: [firefox, chromium]
      steps:
          - name: Check out repository
            uses: actions/checkout@v4
    
          - name: Set up node 20
            uses: actions/setup-node@v4
            with:
              node-version: 20
      
          - name: Install dependencies
            run: npm ci
    
          - name: Install Playwright Browsers
            run: npx playwright install ${{matrix.browser}}
    
          - name: Run Playwright tests
            run: npx playwright test --project ${{matrix.browser}} 
            env:
              PLAYWRIGHT_BASE_URL: {{needs.cd-pipeline.outputs.pages-url}}
    
          - uses: actions/upload-artifact@v4
            if: always()
            with:
              name: playwright-report-browser
              path: playwright-report/
              retention-days: 1